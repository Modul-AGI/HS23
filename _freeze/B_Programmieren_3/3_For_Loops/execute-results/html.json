{
  "hash": "cf292dfc26f1299fae7d42f4d8d9fb3c",
  "result": {
    "markdown": "# Aufgabe 11: *for loop* Basics {#sec-forloops-2}\n\n## Theorie\n\nBis jetzt haben wir lediglich Sachen in die Konsole herausgeben lassen, doch wie schon bei Functions ist der Zweck einer *for loop* meist, dass nach Durchführung etwas davon zurückbleibt. Aber `return()` gibt es wie bereits erwähnt bei *for loops* nicht. Nehmen wir folgendes Beispiel:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfor rolle in [\"bitch\",\"lover\",\"child\",\"mother\",\"sinner\",\"saint\"]:\n    liedzeile = \"I'm a \"+ rolle \n    print(liedzeile)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nI'm a bitch\nI'm a lover\nI'm a child\nI'm a mother\nI'm a sinner\nI'm a saint\n```\n:::\n:::\n\n\nDer Output von dieser For-Loop sind zwar sechs Liederzeilen, wenn wir die Variabel `liedzeile` aber jetzt anschauen ist dort nur das Resultat aus der letzten Durchführung gespeichert. Das gleiche gilt auch für die Variabel `rolle`.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nliedzeile\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n\"I'm a saint\"\n```\n:::\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nrolle\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n'saint'\n```\n:::\n:::\n\n\nDas verrät uns etwas über die Funktionsweise des *for loops*: Bei jedem Durchgang werden die Variablen immer wieder überschrieben. Wenn wir also den Output des ganzen For-Loops abspeichern wollen, müssen wir dies etwas vorbereiten.\n\nDafür erstellen wir unmittelbar for dem *for loops* einen leeren Behälter, zum Beispiel eine leere Liste:\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nrefrain = []\n```\n:::\n\n\nNun können wir innerhalb des *Loops* `append()` nutzen, um den Output von einem Durchgang dieser Liste hinzuzufügen.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nfor rolle in [\"bitch\",\"lover\",\"child\",\"mother\",\"sinner\",\"saint\"]:\n    liedzeile = \"I'm a \"+ rolle \n    refrain.append(liedzeile)\n```\n:::\n\n\nIn unserer Liste `refrain` ist nun der Wert *jeder* Iteration gespeichert.\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nrefrain\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n[\"I'm a bitch\",\n \"I'm a lover\",\n \"I'm a child\",\n \"I'm a mother\",\n \"I'm a sinner\",\n \"I'm a saint\"]\n```\n:::\n:::\n\n\n## Übungen\n\n### Übung 11.1 {#sec-ex-for-loops-gruesse}\n\nNehmen wir nochmals das Beispiel aus @sec-for-gruss. Erstelle nochmal ein Loop, wo drei Personen aus einer Liste gegrüsst werden. Diesmal sollen aber die drei Grüsse in einer Liste (z.B. `mylist) gespeichert werden.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\nmylist = []\n\nfor name in [\"Il Buono\", \"Il Brutto\", \"Il Cattivo\"]:\n    mylist.append(\"Ciao \"+name)\n```\n:::\n\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\n# Das Resultat sieht dann so aus:\nmylist\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n['Ciao Il Buono', 'Ciao Il Brutto', 'Ciao Il Cattivo']\n```\n:::\n:::\n\n\n### Übung 11.2 {#sec-ex-loopoutput}\n    \nDer im Beispiel verwendete Refrain aus [dem Lied \"Bitch\" von Meredith Brooks](https://www.metrolyrics.com/bitch-lyrics-meredith-brooks.html) besteht bis auf zwei Zeilen aus Wiederholungen. Versuche mit **zwei verschiedenen**, aneinander gereihten *for loops* den ganzen Refrain in einer Liste zu speichern. Die beiden Teile die vom Muster Abweichen (\"*I do not feel ashamed*\" und \"*You know you wouldn't want it any other way*\") kannst du auch ausserhalb der Loops in die Listen einfügen (`append`).\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\nrefrain = []\n\nfor rolle in [\"bitch\",\"lover\",\"child\",\"mother\",\"sinner\",\"saint\"]:\n    liedzeile = \"I'm a \"+ rolle \n    refrain.append(liedzeile)\nrefrain.append(\"I do not feel ashamed\")\nfor rolle in [\"your hell\",\"your dream\",\"nothing in between\"]:\n    liedzeile = \"I'm \"+ rolle \n    refrain.append(liedzeile)\nrefrain.append(\"You know you wouldn't want it any other way\") \n```\n:::\n\n\n::: {.cell execution_count=10}\n``` {.python .cell-code}\n# Das Resultat sieht dann so aus:\nrefrain\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n[\"I'm a bitch\",\n \"I'm a lover\",\n \"I'm a child\",\n \"I'm a mother\",\n \"I'm a sinner\",\n \"I'm a saint\",\n 'I do not feel ashamed',\n \"I'm your hell\",\n \"I'm your dream\",\n \"I'm nothing in between\",\n \"You know you wouldn't want it any other way\"]\n```\n:::\n:::\n\n\n",
    "supporting": [
      "3_For_Loops_files"
    ],
    "filters": [],
    "includes": {}
  }
}