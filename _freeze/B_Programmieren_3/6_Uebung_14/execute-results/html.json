{
  "hash": "f6268510fec2244b975ccc9f1822ad7c",
  "result": {
    "markdown": "---\noutput: false\necho: false                      # set to true to show solution\ncode-fold: false                 # set to true to show solution\ncode-summary: \"Musterlösung\"    \n---\n\n## Übung 14\n\nNun ist es Zeit, dass ihr selbst mit *GeoDataFrames* Hand anlegt. Achtet dabei immer auf die Datentypen eurer Daten (mit `type`) und konsultiert dazu @sec-pythongis-datenstruktur. Zudem ist Geopandas gut dokumentiert, es lohnt ich diese immer wieder zu konsultieren: [geopandas.org](https://geopandas.org)\n\n<!-- % *DataFrame* zu *GeoDataFrame* -->\n## Übung  14.1\n\nImportiere *Geopandas* und wandle `zeckenstiche` in eine *GeoDataFrame* um (`zeckenstiche`). Vergiss nicht, das Koordinatenbezugssystem festzulegen!\n\n\n\n<!-- % Punkte Buffern -->\n## Übung  14.2\n\nBuffere die Zeckenstiche um eine Distanz von 12 Meter und speichere den Output in der Variabel `zeckenstiche_buffer`. Visualisiere die gebufferten Punkte mit `.explore()`.\n\n::: {.cell execution_count=2}\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'zeckenstiche_gpd' is not defined\n```\n:::\n:::\n\n\n## Übung  14.3\n\nExtrahiere die Umrisse von `zeckenstiche_buffer` und speichere diese in `zeckenstiche_buffer_outline`. Visualisiere anschliessend diese Umrisse.\n\n::: {.cell execution_count=3}\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'zeckenstiche_buffer' is not defined\n```\n:::\n:::\n\n\n## Übung  14.4\n\nNutze nachstehenden Code um zwei Datensätze im gleichen Plot darzustellen. \n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Nicht interaktiv:\nfrom matplotlib import pyplot as plt\nfig, ax = plt.subplots()\n\nzeckenstiche_buffer_outline.plot(ax = ax, color = \"green\")\nzeckenstiche_gpd.plot(ax = ax, color = \"pink\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nModuleNotFoundError: No module named 'matplotlib'\n```\n:::\n:::\n\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Interaktiv:\n\nbase = zeckenstiche_buffer_outline.explore(color = \"green\")\nzeckenstiche_gpd.explore(m = base, color = \"pink\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'zeckenstiche_buffer_outline' is not defined\n```\n:::\n:::\n\n\n<!-- % Envelope -->\n## Übung  14.5\n\nBerechne das \"Envelope\" von `zeckenstiche_gpd` anhand der Beispiele in @sec-raeumliche-operationen. Speichere den Output als `zeckenstiche_envelope`.\n\n:::{.callout-note collapse=\"true\"}\n\nDenk daran, dass du zuerst noch einen Union machen musst (siehe @sec-raeumliche-operationen)\n\n:::\n\n\n\n## Übung  14.6\n\nExportiere `zeckenstiche_gpd` als \"Geopackage\" mit dem Namen \"zeckenstiche.gpkg\". Lese nochmal @sec-pythongis-formate wenn du nicht mehr weisst, wie das geht. Versuche anschliessend, \"zeckenstiche.gpkg\" wieder einzulesen.\n\n\n\n",
    "supporting": [
      "6_Uebung_14_files"
    ],
    "filters": [],
    "includes": {}
  }
}